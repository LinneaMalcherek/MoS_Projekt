curling.html är själva hemsidan som ska anvädas. kan ändras till php sen men lättare nu tycker jag att ha html för annars måste jag fixa och trixa för att få php att synas i webbläsaren direkt.

CurlingStone.js är klassen för en curlingsten.

initBuffers.js, initGL.js, initShaders.js har med WebGL att göra. 

glMatrix-0.9.5.min.js är ett mattebibliotek som används i de ovan nämda 3 filerna.

sylvester.js och sylvester.src.js är också ett mattebibliotek med vektorer och matriser som är mer användarvänligt och används därför i 'vår' kod i tex curlingstensklassen. 

webGLStart.js innehåller en animate-funktion som gör anroppas för varje frame genom den rekursiva funktionen tick() som finns i samma fil. webGLStart-funktionen är den som anroppas från HTML-sidan och startat själva canvasen, initerar buffrar osv. även den som anroppar theGame som gör att den börjar rendera och skapat en klass för att hålla alla stenar.

theGame.js är en klass som är tänkt att hantera alla curlingstenar. här kasta stenar och även kolla kollision då det är här alla stenar är placerade. dock så är allStones en global variabel.. kanske inte är så bra men funkar för tillfället.

dataConstants.js - innehåller att konstanter. globala variabler

drawScene.js - WebGL där varje objekt ritas ut. här kollas globala variablen allStones som innehåller alla stenar. Går igenom och ritar ut de som ska ritas. hämtar dess xPos och yPos, delar dock nu på 10 för att det verkar som att blir knasigt annars med avståndet.. går alldels för fort fram. zPos finns i dataConstants och är satt just nu till ett fixt värde. 



ÖVRIGT:

VIKTIGT att alla javscript är anroppade i rätt ordning i curling.html då de är beroende av varandra scripten.. kanske inte världens bästa men kanske går att lösa senare. kommer inte på ngt nu. 

i javascript när man initierar en variabel men:
var test = 3;
så betyder det att det är en lokal variabel, då ordet var innan bestämmer detta och livslängden kommer bara att hålla i den funktion den finns i.
när man däremot skriver:
test = 3; 
så kommer den att hantera den som en global variabel. 

om man i en klass skriver
this.test = 3;
så betyder det att klassen har en variabel test som är satt till 3.


Riktiga värden för konstanterna 
	FIELDWIDTH = 5;
	HACK_HOG = 10.059;
	HACK_HOG_2 = 32.004;
	TEE = $V([0,38.404]);
	NEST_RADIUS = 1.829;
	HACK_BACK = 40.233;

